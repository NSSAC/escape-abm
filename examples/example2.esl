config IMMUNITY_LE18: float = 0.8
config TRANSMISSIBILITY: float = 0.5
config MAX_DURATION: float = 86400.0

node
  pid: int node key
  age: int static
end

edge
  target_pid: int target node key
  source_pid: int source node key
  duration: int static
end

enum state_t
  S, E, I, A, R
end

contagion cntg
  state type state_t

  transition
    E -> I, p = symp_prob, dwell = 3.0
    E -> A,
        p = lambda (n) {
            return 1.0 - symp_prob(n)
        },
        dwell = 3.0
    Isymp -> R, dwell = normal(5.0, 1.0)
    Iasymp -> R, dwell = normal(5.0, 1.0)
  end

  transmission
    Isymp => S -> E
    Iasymp => S -> E
  end

  susceptibility = 1.0
  infectivity = 1.0
  transmissibility = lambda (e) {
    return TRANSMISSIBILITY * e.duration / MAX_DURATION
  }
end

def symp_prob(n: node) -> float:
  if n.age <= 18:
    return 1.0 - IMMUNITY_LE18
  else:
    return 1.0
  end
end

def intervene():
  if CUR_TICK < 10:
    from node
    filter lambda (n) { return n.cntg.state == S }
    sample ABSOLUTE 5
    apply lambda (n) { n.cntg.state = E }
  end
end

